# -*- coding: utf-8 -*-
"""Recursividade.py

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1_L5G0yJlywbe1ohi8VLSP-ZFoA0X1lK3
"""

#################################################
#Busca sequencial conceito/funcionamento
def busca_sequencial(valores, valor_buscado, n, i):
    while i < n: # 4 n = 5
        if valores[i] == valor_buscado: #valor_buscado = 2
            return i
        i+=1
    return -1
#################################################

def main():
    valores = [5, 3, 4, 1, 2]
    while True:
        op = int(input("1 - Buscar valor.\n"
                       "2 - Imprimir lista completa.\n"
                       "3 - Sair.\n"
                       "\n\nOpção:\n"))            
        if op == 1:
            valor_buscado = int(input("Informe valor para buscar: \n"))
            i = 0
            n = len(valores)
            resposta = busca_sequencial(valores, valor_buscado, n, i)
                      
            if resposta < 0:
                print("\n\nValor", valor_buscado,"não encontrado na lista.\n")
            else:
                print("\n\nValor", valor_buscado,"encontrado na posição", resposta, "da lista.\n")
        
        elif op == 2:
            print(valores)
        elif op == 3:
            break
        else:
            print("Opcao inválida.")

if __name__ == '__main__':
    main()

#################################################
#Busca sequencial recursiva
def busca_sequencial_recursiva(valores, valor_buscado,n, i):
    if i == n:
      return -1
    elif valores[i] == valor_buscado:
      return i
    else:
      return busca_sequencial_recursiva(valores, valor_buscado, n, i+1)
#################################################
def main():
    valores = [5, 3, 4, 1, 2] 
    while True:
        op = int(input("1 - Buscar valor.\n"
                       "2 - Imprimir lista completa.\n"
                       "3 - Sair.\n"
                       "\n\nOpção:\n"))            
        if op == 1:
            valor_buscado = int(input("Informe valor para buscar: \n"))
            n = len(valores)
            i = 0
            resposta = busca_sequencial_recursiva(valores, 
                                        valor_buscado, 
                                        n, 
                                        i)
            if resposta < 0:
                print("\n\nValor", valor_buscado,"não encontrado na lista.\n")
            else:
                print("\n\nValor", valor_buscado,"encontrado na posição", resposta, "da lista.\n")

        elif op == 2:
            print(valores)
        elif op == 3:
            break
        else:
            print("Opção inválida.")

if __name__ == '__main__':
    main()

#################################################
#Algoritmo de ordenação Merge/Mescla
def merge(valores_esquerdos, valores_direitos):
    valores_ordenados = [ ]
    while valores_esquerdos or valores_direitos:
        if len(valores_esquerdos) and len(valores_direitos):
            if valores_esquerdos[0] < valores_direitos[0]:
                valores_ordenados.append(valores_esquerdos.pop(0))
            else:
                valores_ordenados.append(valores_direitos.pop(0))
        if not len(valores_esquerdos):
            if len(valores_direitos):
                valores_ordenados.append(valores_direitos.pop(0))
        if not len(valores_direitos):
            if len(valores_esquerdos):
                valores_ordenados.append(valores_esquerdos.pop(0))
    return valores_ordenados

def merge_sort(valores):
    if len(valores) < 2:
        return valores
    meio = int(len(valores)/2)
    return merge(merge_sort(valores[:meio]), merge_sort(valores[meio:]))
#################################################
def main():
    valores = [5, 4, 3, 2, 1, 6, 0, 7 , 8] # 9
    while True:
        op = int(input("1 - Ordenar valores.\n"
                       "2 - Imprimir lista completa.\n"
                       "3 - Sair.\n"
                       "\n\nOpção:\n"))            
        if op == 1:
            valores = merge_sort(valores)
        elif op == 2:
            print(valores)
        elif op == 3:
            break
        else:
            print("Opção inválida.")

if __name__ == '__main__':
    main()

#busca binária
def busca_binaria(valores, valor_buscado):
    esquerda = 0
    direita = len(valores)
    while esquerda < direita:
        meio = (esquerda + direita) // 2
        if valores[meio] == valor_buscado:
            return meio
        elif valores[meio] > valor_buscado:
            direita = meio - 1
        else:
            esquerda = meio + 1
    return -1

def main():
    valores = [1, 2, 3, 4, 5] #6
    while True:
        op = int(input("1 - Buscar valor.\n"
                       "2 - Imprimir lista completa.\n"
                       "3 - Sair.\n"
                       "\n\nOpção:\n"))            
        if op == 1:
            valor_buscado = int(input("Informe valor para buscar: \n"))
            resposta = busca_binaria(valores, 
                                     valor_buscado)
            
            if resposta < 0:
                print("\n\nValor", valor_buscado,"não encontrado na lista.\n")
            else:
                print("\n\nValor", valor_buscado,"encontrado na posição", resposta, "da lista.\n")

        elif op == 2:
            print(valores)
        elif op == 3:
            break
        else:
            print("Opção inválida.")

if __name__ == '__main__':
    main()

#busca binária recursiva
def busca_binaria_recursiva(valores, esquerda, direita, valor_buscado): 
    if direita < esquerda:
        return -1
    meio = (esquerda + direita) // 2
    if valores[meio] == valor_buscado:
        return meio
    elif valores[meio] > valor_buscado:
        return busca_binaria_recursiva(valores, esquerda, meio - 1, valor_buscado)
    else:
        return busca_binaria_recursiva(valores, meio + 1, direita, valor_buscado)

def main():
    valores = [1, 2, 3, 4, 5]
    while True:
        op = int(input("1 - Buscar valor.\n"
                       "2 - Imprimir lista completa.\n"
                       "3 - Sair.\n"
                       "\n\nOpção:\n"))            
        if op == 1:
            valor_buscado = int(input("Informe valor para buscar: \n"))
            esquerda = 0
            direita = len(valores)-1
            resposta = busca_binaria_recursiva(valores,
                                               esquerda,
                                               direita,
                                               valor_buscado)
            
            if resposta < 0:
                print("\n\nValor", valor_buscado,"não encontrado na lista.\n")
            else:
                print("\n\nValor", valor_buscado,"encontrado na posição", resposta, "da lista.\n")

        elif op == 2:
            print(valores)
        elif op == 3:
            break
        else:
            print("Opção inválida.")

if __name__ == '__main__':
    main()